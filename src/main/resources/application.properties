# ===============================
# AWS DynamoDB Configuration
# ===============================

# AWS Region (기본값: ap-northeast-2)
aws.region=ap-northeast-2

# 로컬 DynamoDB 사용 여부 (true: 로컬, false: AWS 클라우드)
aws.dynamodb.local=false

# 로컬 DynamoDB 엔드포인트 (로컬 사용 시에만 필요)
# aws.dynamodb.endpoint=http://localhost:8000

# AWS 자격 증명 (선택사항)
# AWS 클라우드 환경에서는 IAM Role, AWS Profile, 환경변수 등을 통해 자격 증명을 제공할 수 있습니다.
# 명시적으로 키를 설정하려면 아래 주석을 해제하고 실제 값을 입력하세요.
# aws.accessKey=YOUR_ACCESS_KEY
# aws.secretKey=YOUR_SECRET_KEY

# ===============================
# Spring Boot Configuration
# ===============================
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# ===============================
# 환경별 설정 예시
# ===============================

# 로컬 개발 환경 설정 예시:
# aws.dynamodb.local=true
# aws.dynamodb.endpoint=http://localhost:8000
# aws.accessKey=localkey
# aws.secretKey=localsecret

# AWS 클라우드 환경 설정 예시:
# aws.dynamodb.local=false
# aws.region=ap-northeast-2
# (자격 증명은 IAM Role 또는 AWS Profile 사용 권장)

# ===============================
# DynamoDB CLI 명령어 예시
# ===============================
# 로컬 DynamoDB 쿼리:
# aws dynamodb query --table-name customer --key-condition-expression "customerId = :v1" --expression-attribute-values  '{":v1":{"S":"admin2"}}' --endpoint-url=http://localhost:8000

# AWS 클라우드 DynamoDB 쿼리:
# aws dynamodb query --table-name customer --key-condition-expression "customerId = :v1" --expression-attribute-values  '{":v1":{"S":"admin2"}}' --region ap-northeast-2

